<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file 
    distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under 
    the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may 
    obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to 
    in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
    ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under 
    the License. -->

<blueprint 
    xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf" 
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://cxf.apache.org/blueprint/jaxrs">

    <cm:property-placeholder persistent-id="org.apache.servicemix.examples.cxf.receive"
        update-strategy="reload">
        <cm:default-properties>
            <cm:property name="CXFserver" value="http://0.0.0.0:8282/" />
            <cm:property name="service" value="rest" />
        </cm:default-properties>
    </cm:property-placeholder>

    <cxf:rsServer id="rsServer" address="${CXFserver}${service}" serviceClass="com.example.test.cxf.routes.PersonService"
        loggingFeatureEnabled="true" loggingSizeLimit="20">
        <cxf:providers>
            <ref component-id="jsonProvider" />
        </cxf:providers>
    </cxf:rsServer>

    <bean id="serviceHandler" class="com.example.test.cxf.routes.ServiceHandler" init-method="init" />

    <!-- 
    <bean id="jacksonMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="serializationConfig.dateFormat">
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg value="yyyy-MM-dd'T'HH:mm:ss.SZ" />
            </bean>
        </property>
    </bean> -->
    <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider" />

    <camelContext xmlns="http://camel.apache.org/schema/blueprint">
        <route id="PersonServiceRoute">
            <from uri="cxfrs:bean:rsServer?bindingStyle=SimpleConsumer" />
            <log message="Interceptor: ${header.operationName} - ${header.id}" />
            <recipientList>
                <simple>direct-vm:${header.operationName}</simple>
            </recipientList>
        </route>
        <route id="getZone">
            <from uri="direct-vm:getZone" />
            <transform>
                <simple>${header.id}</simple>
            </transform>
            <log message="getZone invocation with id: ${body}" />
            <bean method="getZone" ref="serviceHandler" />
        </route>
        <route id="getPerson">
            <from uri="direct-vm:getPerson" />
            <transform>
                <simple>${header.id}</simple>
            </transform>
            <log message="getPerson invocation with id: ${body}" />
            <bean method="getPerson" ref="serviceHandler" />
        </route>
        <route id="putPerson">
            <from uri="direct-vm:putPerson" />
            <log message="putPerson invocation with body: ${body}" />
            <bean method="putPerson" ref="serviceHandler" />
        </route>
        <route id="deletePerson">
            <from uri="direct-vm:deletePerson" />
            <transform>
                <simple>${header.id}</simple>
            </transform>
            <log message="deletePerson invocation with id: ${body}" />
            <bean method="deletePerson" ref="serviceHandler" />
        </route>
    </camelContext>
</blueprint>
