<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file 
    distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under 
    the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may 
    obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to 
    in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
    ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under 
    the License. -->
<blueprint 
    xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf" 
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:jpa="http://aries.apache.org/xmlns/jpa/v1.0.0"
    xmlns:tx="http://aries.apache.org/xmlns/transactions/v1.0.0"
    xsi:schemaLocation="
        http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        http://cxf.apache.org/blueprint/jaxrs">

    <!-- ******************************************************************* -->
    <!-- CXF REST SERVER                                                     -->
    <!-- ******************************************************************* -->
    <cm:property-placeholder persistent-id="org.apache.servicemix.examples.cxf.receive"
        update-strategy="reload">
        <cm:default-properties>
            <cm:property name="CXFserver" value="http://0.0.0.0:8282/" />
            <cm:property name="service" value="rest" />
        </cm:default-properties>
    </cm:property-placeholder>
    <!-- 
    <bean id="jacksonMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="serializationConfig.dateFormat">
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg value="yyyy-MM-dd'T'HH:mm:ss.SZ" />
            </bean>
        </property>
    </bean> -->
    <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider" />
    <cxf:rsServer id="rsServer" address="${CXFserver}${service}" serviceClass="com.tts.app.configcenter.resource.GenericResource"
        loggingFeatureEnabled="true" loggingSizeLimit="200">
        <cxf:providers>
            <ref component-id="jsonProvider" />
        </cxf:providers>
    </cxf:rsServer>


    <!-- ******************************************************************* -->
    <!-- CAMEL ROUTES                                                        -->
    <!-- ******************************************************************* -->
    <camelContext xmlns="http://camel.apache.org/schema/blueprint">
        <route id="GenericServiceRoute">
            <from uri="cxfrs:bean:rsServer?bindingStyle=SimpleConsumer" />
            <log message="INTERCEPTOR: ${header.resource} - ${header.operationName} - ${header.id}" />
            <recipientList>
                <simple>direct-vm:${header.operationName}</simple>
            </recipientList>
        </route>
        <!-- Routing for getProcessor -->
        <route id="getProcessor">
            <from uri="direct-vm:get" />
            <log message="--- INVOKING ${header.resource}.${header.operationName}(${header.id})" />
            <to uri="bean:serviceInvoker?method=invoke(${header.resource}, ${header.operationName}, ${header.id})" />
        </route>
        <!-- Routing for putResource -->
        <route id="updateZoneProcessor">
            <from uri="direct-vm:updateZone" />
            <log message="--- INVOKING ${header.resource}.${header.operationName}(${body})" />
            <to uri="bean:serviceInvoker?method=invoke('zone', 'update', ${body})" />
        </route>
        <route id="updateServerProcessor">
            <from uri="direct-vm:updateServer" />
            <log message="--- INVOKING ${header.resource}.${header.operationName}(${body})" />
            <to uri="bean:serviceInvoker?method=invoke('server', 'update', ${body})" />
        </route>
        <!-- Routing for getProcessor -->
        <route id="deleteProcessor">
            <from uri="direct-vm:deleteProcessor" />
            <log message="--- INVOKING ${header.resource}.${header.operationName}(${header.id})" />
            <to uri="bean:serviceInvoker?method=invoke(${header.resource}, ${header.operationName}, ${header.id})" />
        </route>
    </camelContext>


    <!-- ******************************************************************* -->
    <!-- COMMANDS                                                            -->
    <!-- ******************************************************************* -->
    <command-bundle xmlns="http://karaf.apache.org/xmlns/shell/v1.1.0">
        <command name="configcenter/addZone">
            <action class="com.tts.app.configcenter.karaf.AddZoneCommand">
                <property name="service" ref="zoneService"/>
            </action>
        </command>
        <command name="configcenter/deleteZone">
            <action class="com.tts.app.configcenter.karaf.DeleteZoneCommand">
               <property name="service" ref="zoneService"/>
            </action>
        </command>
        <command name="configcenter/getZone">
            <action class="com.tts.app.configcenter.karaf.GetZoneCommand">
                 <property name="service" ref="zoneService"/>
            </action>
        </command>
    </command-bundle>

    
    <!-- ******************************************************************* -->
    <!-- BEAN DEFINITIONS                                                    -->
    <!-- ******************************************************************* -->
    <bean id="serviceInvoker" class="com.tts.app.configcenter.resource.ServiceInvokerImpl" init-method="init" />

    <bean id="zoneService" class="com.tts.app.configcenter.zone.ZoneServiceImpl">
        <property name="dao" ref="zoneDao" />
    </bean>
    <bean id="zoneDao" class="com.tts.app.configcenter.zone.ZoneDaoImpl">
        <jpa:context unitname="DATA_HIBERNATE_JTA" property="entityManager"/>
        <tx:transaction method="*" value="Required"/>
    </bean>
    <service ref="zoneDao" interface="com.tts.app.configconter.zone.ZoneDao">
        <service-properties>
            <entry key="osgi.jndi.service.name" value="hbm/zoneDao"/>
        </service-properties>
    </service>
    
    <bean id="serverService" class="com.tts.app.configcenter.server.ServerServiceImpl">
        <property name="dao" ref="serverDao" />
    </bean>
    <bean id="serverDao" class="com.tts.app.configcenter.server.ServerDaoImpl">
        <jpa:context unitname="DATA_HIBERNATE_JTA" property="entityManager"/>
        <tx:transaction method="*" value="Required"/>
    </bean>
    <service ref="serverDao" interface="com.tts.app.configcenter.server.ServerDao">
        <service-properties>
            <entry key="osgi.jndi.service.name" value="hbm/serverDao"/>
        </service-properties>
    </service>
</blueprint>
